name: Python Tests

on: [push]

jobs:

  aniv-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint aniv with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test aniv with pytest
        run: |
          pytest CynanBot/aniv/tests


  cheer-actions-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint cheer actions with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test cheer actions with pytest
        run: |
          pytest CynanBot/cheerActions/tests
          pytest CynanBot/cheerActions/timeout/tests


  content-scanner-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint content scanner with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test content scanner with pytest
        run: |
          pytest CynanBot/contentScanner/tests


  cuteness-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint cuteness with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test cuteness with pytest
        run: |
          pytest CynanBot/cuteness/tests


  deep-l-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint DeepL with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test DeepL with pytest
        run: |
          pytest CynanBot/deepL/tests


  funtoon-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint funtoon with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test funtoon with pytest
        run: |
          pytest CynanBot/funtoon/tests


  google-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint google with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test google with pytest
        run: |
          pytest CynanBot/google/tests


  jisho-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint jisho with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test jisho with pytest
        run: |
          pytest CynanBot/jisho/tests


  language-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint language with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test language with pytest
        run: |
          pytest CynanBot/language/tests

  misc-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint misc with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test misc with pytest
        run: |
          pytest CynanBot/misc/tests


  network-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions aiofiles pytest pytest-asyncio aiohttp requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint network with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test network with pytest
        run: |
          pytest CynanBot/network/tests


  open-weather-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint open weather with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test open weather with pytest
        run: |
          pytest CynanBot/openWeather/tests


  pkmn-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint pkmn with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test pkmn with pytest
        run: |
          pytest CynanBot/pkmn/tests


  recurring-actions-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint recurring actions with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test recurring actions with pytest
        run: |
          pytest CynanBot/recurringActions/tests


  sent-message-logger-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint sent message logger with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test sent message logger with pytest
        run: |
          pytest CynanBot/sentMessageLogger/tests


  sound-player-manager-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint sound player manager with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test sound player manager with pytest
        run: |
          pytest CynanBot/soundPlayerManager/tests


  storage-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio aiofiles aiosqlite asyncpg
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint storage with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test storage with pytest
        run: |
          pytest CynanBot/storage/tests


  transparent-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz xmltodict
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint transparent with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test transparent with pytest
        run: |
          pytest CynanBot/transparent/tests


  trivia-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions aiofiles polyleven pytest pytest-asyncio pytz roman num2words mock asyncpg aiosqlite
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint trivia with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test trivia with pytest
        run: |
          pytest CynanBot/trivia/tests
          pytest CynanBot/trivia/emotes/tests


  tts-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions emoji pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint TTS with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test TTS with pytest
        run: |
          pytest CynanBot/tts/tests


  twitch-tests:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 typing-extensions pytest pytest-asyncio pytz
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint twitch with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test twitch with pytest
        run: |
          pytest CynanBot/twitch/tests
          pytest CynanBot/twitch/api/tests
